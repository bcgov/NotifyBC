import{_ as e,o,c as n,e as a}from"./app-73097456.js";const s={},t=a(`<h1 id="memory-dump" tabindex="-1"><a class="header-anchor" href="#memory-dump" aria-hidden="true">#</a> Memory Dump</h1><p>Super-admin can get a memory dump of <em>NotifyBC</em> instance by querying <code>/memory</code> API end point. For example</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>$ curl -s http<span class="token operator">:</span><span class="token comment">//localhost:3000/api/memory</span>
Heap.<span class="token number">20240513.114015</span>.<span class="token number">22037.0</span>.<span class="token number">001</span>.heapsnapshot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>The output is the file name of the memory dump. The dump file can be loaded by, for example, Chrome DevTools.</p><div class="custom-container tip"><p class="custom-container-title">How to get memory dump of a particular node?</p><p>If you call <code>/memory</code> from a client-facing URL end point, which is usually load-balanced, the memory dump occurs only on node handling your request. To perform it on the node you want to troubleshoot, in particular the <em>master</em> node, run the command from the node. Make sure 127.0.0.1 is in <em>adminIps</em>.</p></div>`,5),m=[t];function r(c,d){return o(),n("div",null,m)}const l=e(s,[["render",r],["__file","index.html.vue"]]);export{l as default};
