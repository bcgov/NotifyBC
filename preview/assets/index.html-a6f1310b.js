import { _ as _export_sfc, r as resolveComponent, o as openBlock, c as createElementBlock, a as createBaseVNode, b as createTextVNode, d as createVNode, w as withCtx, e as createStaticVNode } from "./app-fffec9eb.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createBaseVNode(
  "h1",
  {
    id: "configuration-overview",
    tabindex: "-1"
  },
  [
    /* @__PURE__ */ createBaseVNode("a", {
      class: "header-anchor",
      href: "#configuration-overview",
      "aria-hidden": "true"
    }, "#"),
    /* @__PURE__ */ createTextVNode(" Configuration Overview")
  ],
  -1
  /* HOISTED */
);
const _hoisted_2 = { class: "custom-container tip" };
const _hoisted_3 = /* @__PURE__ */ createBaseVNode(
  "p",
  { class: "custom-container-title" },
  "Helm Chart Configurations",
  -1
  /* HOISTED */
);
const _hoisted_4 = /* @__PURE__ */ createBaseVNode(
  "em",
  null,
  "NoitfyBC",
  -1
  /* HOISTED */
);
const _hoisted_5 = /* @__PURE__ */ createBaseVNode(
  "em",
  null,
  "NotifyBC",
  -1
  /* HOISTED */
);
const _hoisted_6 = /* @__PURE__ */ createStaticVNode('<p>There are two types of configurations - static and dynamic. Static configurations are defined in files or environment variables, requiring restarting <em>NotifyBC</em> to take effect, whereas dynamic configurations are defined in databases and updates take effect immediately.</p><h2 id="static-configurations" tabindex="-1"><a class="header-anchor" href="#static-configurations" aria-hidden="true">#</a> Static Configurations</h2><p>Most static configurations are specified in file <em>/src/config.ts</em>. If you need to change, instead of updating <em>/src/config.ts</em> file, create local file <em>/src/config.local.js</em> or environment specific file <em>/src/config.&lt;env&gt;.js</em>, which is only included when environment variable <em>NODE_ENV</em> equals <em>&lt;env&gt;</em>. Besides <em>js</em>, <em>ts</em> and <em>json</em> file extensions are also supported. The rest of the documentation assumes the file extension is <em>js</em>. Content in these files are deeply merged in following ascending precedence</p><ul><li>default file /src/config.ts</li><li>environment specific file <em>/src/config.&lt;env&gt;.js</em></li><li>local file <em>/src/config.local.js</em></li></ul><div class="custom-container warning"><p class="custom-container-title">Run build script whenever changing file in /src</p><p>Every time a file under <em>/src</em>, including config files, is updated, run <code>yarn build</code> before restarting <em>NotifyBC</em> to take effect.</p></div><p>Following configs should be customized per installation</p>', 6);
const _hoisted_12 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  "In addition, if installing from source code",
  -1
  /* HOISTED */
);
const _hoisted_13 = /* @__PURE__ */ createBaseVNode(
  "p",
  null,
  "Customizing other configs only if needed.",
  -1
  /* HOISTED */
);
const _hoisted_14 = /* @__PURE__ */ createBaseVNode(
  "h2",
  {
    id: "dynamic-configurations",
    tabindex: "-1"
  },
  [
    /* @__PURE__ */ createBaseVNode("a", {
      class: "header-anchor",
      href: "#dynamic-configurations",
      "aria-hidden": "true"
    }, "#"),
    /* @__PURE__ */ createTextVNode(" Dynamic Configurations")
  ],
  -1
  /* HOISTED */
);
const _hoisted_15 = /* @__PURE__ */ createBaseVNode(
  "div",
  { class: "custom-container tip" },
  [
    /* @__PURE__ */ createBaseVNode("p", { class: "custom-container-title" }, "Why Dynamic Configs?"),
    /* @__PURE__ */ createBaseVNode("p", null, "Dynamic configs are needed in cases such as"),
    /* @__PURE__ */ createBaseVNode("ul", null, [
      /* @__PURE__ */ createBaseVNode("li", null, "to allow define service-specific configs such as message templates"),
      /* @__PURE__ */ createBaseVNode("li", null, "in a multi-node deployment, configs can be generated by one node (typically master) and shared with other nodes")
    ])
  ],
  -1
  /* HOISTED */
);
function _sfc_render(_ctx, _cache) {
  const _component_RouterLink = resolveComponent("RouterLink");
  return openBlock(), createElementBlock("div", null, [
    _hoisted_1,
    createBaseVNode("div", _hoisted_2, [
      _hoisted_3,
      createBaseVNode("p", null, [
        createTextVNode("The document pages in this section cover "),
        _hoisted_4,
        createTextVNode(" app level configurations only. If your "),
        _hoisted_5,
        createTextVNode(" is deployed to Kubernetes using Helm, you can also "),
        createVNode(_component_RouterLink, { to: "/docs/getting-started/installation.html#customizations" }, {
          default: withCtx(() => [
            createTextVNode("customize")
          ]),
          _: 1
          /* STABLE */
        }),
        createTextVNode(" infrastructure level configurations.")
      ])
    ]),
    _hoisted_6,
    createBaseVNode("ul", null, [
      createBaseVNode("li", null, [
        createVNode(_component_RouterLink, { to: "/docs/config/adminIpList.html" }, {
          default: withCtx(() => [
            createTextVNode("Admin IP List")
          ]),
          _: 1
          /* STABLE */
        })
      ]),
      createBaseVNode("li", null, [
        createVNode(_component_RouterLink, { to: "/docs/config/reverseProxyIpLists.html" }, {
          default: withCtx(() => [
            createTextVNode("Reverse Proxy IP Lists")
          ]),
          _: 1
          /* STABLE */
        })
      ]),
      createBaseVNode("li", null, [
        createVNode(_component_RouterLink, { to: "/docs/config/httpHost.html" }, {
          default: withCtx(() => [
            createTextVNode("HTTP Host")
          ]),
          _: 1
          /* STABLE */
        })
      ]),
      createBaseVNode("li", null, [
        createVNode(_component_RouterLink, { to: "/docs/config/email.html#smtp" }, {
          default: withCtx(() => [
            createTextVNode("SMTP")
          ]),
          _: 1
          /* STABLE */
        })
      ])
    ]),
    _hoisted_12,
    createBaseVNode("ul", null, [
      createBaseVNode("li", null, [
        createVNode(_component_RouterLink, { to: "/docs/config/database.html" }, {
          default: withCtx(() => [
            createTextVNode("Database")
          ]),
          _: 1
          /* STABLE */
        })
      ]),
      createBaseVNode("li", null, [
        createVNode(_component_RouterLink, { to: "/docs/config/internalHttpHost.html" }, {
          default: withCtx(() => [
            createTextVNode("Internal HTTP Host")
          ]),
          _: 1
          /* STABLE */
        })
      ])
    ]),
    _hoisted_13,
    _hoisted_14,
    createBaseVNode("p", null, [
      createTextVNode("Dynamic configs are managed using REST "),
      createVNode(_component_RouterLink, { to: "/docs/api-config/" }, {
        default: withCtx(() => [
          createTextVNode("configuration api")
        ]),
        _: 1
        /* STABLE */
      }),
      createTextVNode(".")
    ]),
    _hoisted_15
  ]);
}
const index_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "index.html.vue"]]);
export {
  index_html as default
};
//# sourceMappingURL=index.html-a6f1310b.js.map
