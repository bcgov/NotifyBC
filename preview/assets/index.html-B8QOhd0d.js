import{_ as p,c as l,e as t,a,f as n,b as i,d as o,r as c,o as r}from"./app-C-ir5QiH.js";const u={};function d(m,s){const e=c("RouteLink");return r(),l("div",null,[s[21]||(s[21]=t('<h1 id="notification" tabindex="-1"><a class="header-anchor" href="#notification"><span>Notification</span></a></h1><p>Configs in this section customize the handling of notification request or generating notifications from RSS feeds. They are all sub-properties of config object <em>notification</em>. Service-agnostic configs are static and service-dependent configs are dynamic.</p><h2 id="rss-feeds" tabindex="-1"><a class="header-anchor" href="#rss-feeds"><span>RSS Feeds</span></a></h2><p><em>NotifyBC</em> can generate broadcast push notifications automatically by polling RSS feeds periodically and detect changes by comparing with an internally maintained history list. The polling frequency, RSS url, RSS item change detection criteria, and message template can be defined in dynamic configs.</p><div class="hint-container caution"><p class="hint-container-title">Only first page is retrieved for paginated RSS feeds</p><p>If a RSS feed is paginated, <i>NotifyBC</i> only retrieves the first page rather than auto-fetch subsequent pages. Hence paginated RSS feeds should be sorted descendingly by last modified timestamp. Refresh interval should be adjusted small enough such that all new or updated items are contained in first page.</p></div>',5)),a("p",null,[s[1]||(s[1]=n("For example, to notify subscribers of ")),s[2]||(s[2]=a("em",null,"myService",-1)),s[3]||(s[3]=n(" on updates to feed ")),s[4]||(s[4]=a("em",null,"http://my-serivce/rss",-1)),s[5]||(s[5]=n(", create following config item using ")),i(e,{to:"/docs/api-config/#create-a-configuration"},{default:o(()=>s[0]||(s[0]=[n("POST configuration API")])),_:1})]),s[22]||(s[22]=t(`<div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;notification&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;serviceName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;myService&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;rss&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://my-serivce/rss&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;timeSpec&quot;</span><span class="token operator">:</span> <span class="token string">&quot;* * * * *&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;itemKeyField&quot;</span><span class="token operator">:</span> <span class="token string">&quot;guid&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;outdatedItemRetentionGenerations&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;includeUpdatedItems&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;fieldsToCheckForUpdate&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pubDate&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;description&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;httpHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:3000&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;messageTemplates&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;email&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;from&quot;</span><span class="token operator">:</span> <span class="token string">&quot;no_reply@invlid.local&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;subject&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{title}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;textBody&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{description}&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;htmlBody&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{description}&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;sms&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;textBody&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{description}&quot;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The config items in the <em>value</em> field are</p>`,2)),a("ul",null,[s[14]||(s[14]=t('<li>rss <ul><li>url: RSS url</li><li><a name="timeSpec"></a>timeSpec: RSS poll frequency, a space separated fields conformed to <a href="https://www.freebsd.org/cgi/man.cgi?crontab(5)" target="_blank" rel="noopener noreferrer">unix crontab format</a> with an optional left-most seconds field. See <a href="https://github.com/kelektiv/node-cron#cron-ranges" target="_blank" rel="noopener noreferrer">allowed ranges</a> of each field</li><li>itemKeyField: rss item&#39;s unique key field to identify new items. By default <em>guid</em></li><li>outdatedItemRetentionGenerations: number of last consecutive polls from which results an item has to be absent before the item can be removed from the history list. This config is designed to prevent multiple notifications triggered by the same item because RSS poll returns inconsistent results, usually due to a combination of pagination and lack of sorting. By default 1, meaning the history list only keeps the last poll result</li><li>includeUpdatedItems: whether to notify also updated items or just new items. By default <em>false</em></li><li>fieldsToCheckForUpdate: list of fields to check for updates if <em>includeUpdatedItems</em> is <em>true</em>. By default <em>[&quot;pubDate&quot;]</em></li></ul></li>',1)),a("li",null,[s[7]||(s[7]=n("httpHost: the http protocol, host and port used by ")),i(e,{to:"/docs/overview/#mail-merge"},{default:o(()=>s[6]||(s[6]=[n("mail merge")])),_:1}),s[8]||(s[8]=n(". If missing, the value is auto-populated based on the REST request that creates this config item."))]),a("li",null,[s[10]||(s[10]=n("messageTemplates: channel-specific message templates with channel name as the key. ")),s[11]||(s[11]=a("em",null,"NotifyBC",-1)),s[12]||(s[12]=n(" generates a notification for each channel specified in the message templates. Message template fields are the same as those in ")),i(e,{to:"/docs/api-notification/#field-message"},{default:o(()=>s[9]||(s[9]=[n("notification api")])),_:1}),s[13]||(s[13]=n(". Message template fields support dynamic token."))])]),s[23]||(s[23]=t(`<h2 id="broadcast-push-notification-task-concurrency" tabindex="-1"><a class="header-anchor" href="#broadcast-push-notification-task-concurrency"><span>Broadcast Push Notification Task Concurrency</span></a></h2><p>To achieve horizontal scaling, when a broadcast push notification request is received, <em>NotifyBC</em> divides subscribers into chunks and submits a BullMQ job for each chunk. The chunk size is defined by config <em>broadcastSubscriberChunkSize</em>. All subscribers in a chunk are processed concurrently.</p><p>The default value for <em>broadcastSubscriberChunkSize</em> is defined in <em>/src/config.ts</em></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  notification<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    broadcastSubscriberChunkSize<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To customize, create the config with updated value in file <em>/src/config.local.js</em>.</p><div class="hint-container tip"><p class="hint-container-title">When to adjust chunk size?</p><p>Redis memory footprint is inversely proportional to chunk size. Increase chunk size if Redis memory usage is approaching physical limit.</p></div><h2 id="broadcast-push-notification-custom-filter-functions" tabindex="-1"><a class="header-anchor" href="#broadcast-push-notification-custom-filter-functions"><span>Broadcast Push Notification Custom Filter Functions</span></a></h2><div class="hint-container warning"><p class="hint-container-title">Advanced Topic</p><p>Defining custom function requires knowledge of JavaScript and understanding how external libraries are added and referenced in Node.js. Setting a development environment to test the custom function is also recommended.</p></div><p>To support rule-based notification event filtering, <em>NotifyBC</em> uses a <a href="https://github.com/f-w/jmespath.js" target="_blank" rel="noopener noreferrer">modified version</a> of <a href="http://jmespath.org/" target="_blank" rel="noopener noreferrer">jmespath</a> to implement json query. The modified version allows defining custom functions that can be used in <a href="../api-subscription#broadcastPushNotificationFilter">broadcastPushNotificationFilter</a> field of subscription API and <a href="../api-notification#broadcastPushNotificationSubscriptionFilter">broadcastPushNotificationSubscriptionFilter</a> field of subscription API. The functions must be implemented using JavaScript in config <em>notification.broadcastCustomFilterFunctions</em>. The functions can even be <em>async</em>. For example, the case-insensitive string matching function <em>contains_ci</em> shown in the example of that field can be created in file <em>/src/config.local.js</em></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> _ <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;lodash&#39;</span><span class="token punctuation">)</span></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line">  <span class="token literal-property property">notification</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">broadcastCustomFilterFunctions</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">contains_ci</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function-variable function">_func</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolvedArgs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>resolvedArgs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token operator">!</span>resolvedArgs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token boolean">false</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">          <span class="token keyword">return</span> _<span class="token punctuation">.</span><span class="token function">toLower</span><span class="token punctuation">(</span>resolvedArgs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>_<span class="token punctuation">.</span><span class="token function">toLower</span><span class="token punctuation">(</span>resolvedArgs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">_signature</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">          <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">types</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">types</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Consult jmespath.js source code on the <a href="https://github.com/f-w/jmespath.js/blob/master/jmespath.js#L1127" target="_blank" rel="noopener noreferrer">functionTable syntax</a> and <a href="https://github.com/f-w/jmespath.js/blob/master/jmespath.js#L132" target="_blank" rel="noopener noreferrer">type constants</a> used by above code. Note the function can use any Node.js modules (<em><a href="https://lodash.com/" target="_blank" rel="noopener noreferrer">lodash</a></em> in this case).</p><div class="hint-container tip"><p class="hint-container-title">install additional Node.js modules</p><p>The recommended way to install additional Node.js modules is by running command <i><a href="https://docs.npmjs.com/cli/install">npm install &lt;your_module&gt;</a></i> from the directory one level above <i>NotifyBC</i> root. For example, if <i>NotifyBC</i> is installed on <i>/data/notifyBC</i>, then run the command from directory <i>/data</i>. The command will then install the module to <i>/data/node_modules/&lt;your_module&gt;</i>.</p></div><h2 id="guaranteed-broadcast-push-dispatch-processing" tabindex="-1"><a class="header-anchor" href="#guaranteed-broadcast-push-dispatch-processing"><span>Guaranteed Broadcast Push Dispatch Processing</span></a></h2><p>As a major enhancement in v3, by default <em>NotifyBC</em> guarantees all subscribers of a broadcast push notification will be processed in spite of node failures during dispatching. Node failure is a concern because the time takes to dispatch broadcast push notification is proportional to number of subscribers, which is potentially large.</p><p><em>NotifyBC</em> is not only resilient to failures of <em>NotifyBC</em> application nodes, but also entire <em>Redis</em> cluster.</p><p>The guarantee is achieved by</p><ol><li>logging the dispatch result to database individually right after each dispatch</li><li>when subscribers are divided into chunks and a chunk job fails, the job is re-processed by BullMQ</li><li>a chunk job periodically updates the notification <em>updated</em> timestamp field as heartbeat</li><li>if redis cluster fails, a cron job detects the failure from the stale timestamp, and re-submits the notification request</li></ol>`,17)),a("p",null,[s[16]||(s[16]=n("Guaranteed processing doesn't mean notification will be dispatched to every intended subscriber, however. Dispatch can still be rejected by smtp/sms server. Furthermore, even if dispatch is successful, it only means the sending is successful. It doesn't guarantee the recipient receives the notification. ")),i(e,{to:"/docs/config/email.html#bounce"},{default:o(()=>s[15]||(s[15]=[n("Bounce")])),_:1}),s[17]||(s[17]=n(" may occur for a successful dispatch, for instance; or the recipient may not read the message."))]),a("p",null,[s[19]||(s[19]=n("The guarantee comes at a performance penalty because result of each dispatch is written to database one by one, taking a toll on the database. It should be noted that the ")),i(e,{to:"/docs/miscellaneous/benchmarks.html"},{default:o(()=>s[18]||(s[18]=[n("benchmarks")])),_:1}),s[20]||(s[20]=n(" were conducted without the guarantee."))]),s[24]||(s[24]=t(`<p>If performance is a higher priority to you, disable both the guarantee and bounce handling by setting config <em>notification.guaranteedBroadcastPushDispatchProcessing</em> and <em>email.bounce.enabled</em> to <em>false</em> in file <em>/src/config.local.js</em></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">notification</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">guaranteedBroadcastPushDispatchProcessing</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">bounce</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">enabled</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In such case only failed dispatches are written to <em>dispatch.failed</em> field of the notification.</p><h3 id="also-log-skipped-dispatches-for-broadcast-push-notifications" tabindex="-1"><a class="header-anchor" href="#also-log-skipped-dispatches-for-broadcast-push-notifications"><span>Also log skipped dispatches for broadcast push notifications</span></a></h3><p>When <em>guaranteedBroadcastPushDispatchProcessing</em> is <em>true</em>, by default only successful and failed dispatches are logged, along with dispatch candidates. Dispatches that are skipped by filters defined at subscription (<em>broadcastPushNotificationFilter</em>) or notification (<em>broadcastPushNotificationSubscriptionFilter</em>) are not logged for performance reason. If you also want skipped dispatches to be logged to <em>dispatch.skipped</em> field of the notification, set <em>logSkippedBroadcastPushDispatches</em> to <em>true</em> in file <em>/src/config.local.js</em></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line">  <span class="token literal-property property">notification</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token operator">...</span></span>
<span class="line">    <span class="token literal-property property">logSkippedBroadcastPushDispatches</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Setting <em>logSkippedBroadcastPushDispatches</em> to <em>true</em> only has effect when <em>guaranteedBroadcastPushDispatchProcessing</em> is <em>true</em>.</p>`,7))])}const k=p(u,[["render",d],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/docs/config-notification/","title":"Notification","lang":"en-US","frontmatter":{"permalink":"/docs/config-notification/"},"headers":[{"level":2,"title":"RSS Feeds","slug":"rss-feeds","link":"#rss-feeds","children":[]},{"level":2,"title":"Broadcast Push Notification Task Concurrency","slug":"broadcast-push-notification-task-concurrency","link":"#broadcast-push-notification-task-concurrency","children":[]},{"level":2,"title":"Broadcast Push Notification Custom Filter Functions","slug":"broadcast-push-notification-custom-filter-functions","link":"#broadcast-push-notification-custom-filter-functions","children":[]},{"level":2,"title":"Guaranteed Broadcast Push Dispatch Processing","slug":"guaranteed-broadcast-push-dispatch-processing","link":"#guaranteed-broadcast-push-dispatch-processing","children":[{"level":3,"title":"Also log skipped dispatches for broadcast push notifications","slug":"also-log-skipped-dispatches-for-broadcast-push-notifications","link":"#also-log-skipped-dispatches-for-broadcast-push-notifications","children":[]}]}],"git":{},"filePathRelative":"docs/config/notification.md"}');export{k as comp,h as data};
