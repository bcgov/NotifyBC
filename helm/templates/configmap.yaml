apiVersion: v1
kind: ConfigMap
metadata:
  name: {{include "NotifyBC.fullname" .}}
data:
  config.production.js: |-
    module.exports = {
      internalHttpHost: 'http://{{include "NotifyBC.fullname" .}}:{{ .Values.service.web.port }}',
      email: {
        inboundSmtpServer: {
          listeningSmtpPort: 2525,
          options: {
            {{- if not (.Values.service.smtp.enabled) }}
            secure: true
            {{- end }}
          }
        },
        throttle: {
          /* Redis clustering options */
          datastore: 'ioredis',
          clientOptions: {
            name: "mymaster",
            password: process.env.REDIS_PASSWORD,
            sentinelPassword: process.env.REDIS_PASSWORD,
            sentinels: [
              { host: process.env.REDIS_SERVICE_NAME },
            ],
          },
        },
      },
      sms:{
        throttle: {
          /* Redis clustering options */
          datastore: 'ioredis',
          clientOptions: {
            name: "mymaster",
            password: process.env.REDIS_PASSWORD,
            sentinelPassword: process.env.REDIS_PASSWORD,
            sentinels: [
              { host: process.env.REDIS_SERVICE_NAME },
            ],
          },
        },
      },
    }
  middleware.production.js: |-
    module.exports = {
      apiOnly: {
        morgan: {
          enabled: false,
        },
      },
    };
  db.datasource.production.js: |-
    module.exports = {
      uri: `mongodb://${process.env.MONGODB_USER}:${process.env.MONGODB_PASSWORD}@${process.env.DATABASE_SERVICE_NAME}:${process.env.DB_PORT || 27017}/${process.env.MONGODB_DATABASE}?replicaSet=${process.env.MONGODB_REPLICA_SET_NAME}`
    };
  {{- range $key, $val := .Values.configMap }}
  {{- $key | nindent 2 }}: |
    {{- tpl $val $ | nindent 4 }}
  {{- end }}
