{{- $_ := set . "notifyBCInstanceType" "app" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "NotifyBC.fullname" . }}-{{ .notifyBCInstanceType }}
  labels:
    {{- include "NotifyBC.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "NotifyBC.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "NotifyBC.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "NotifyBC.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: NODE_ENV
              value: production
            - name: DATABASE_SERVICE_NAME
              value: {{ .Release.Name }}-mongodb
              {{- if eq .Values.mongodb.architecture "replicaset" -}}
                -headless
              {{- end }}
            - name: MONGODB_USER
              value: {{ .Values.mongodb.auth.usernames | first }}
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mongodb
                  key: mongodb-passwords
            - name: MONGODB_DATABASE
              value: {{ .Values.mongodb.auth.databases | first }}
            - name: MONGODB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mongodb
                  key: mongodb-root-password
            - name: MONGODB_REPLICA_SET_NAME
              value: {{ .Values.mongodb.replicaSetName | default "rs0" | squote }}
            - name: NOTIFYBC_NODE_ROLE
              value: slave
            - name: NOTIFYBC_WORKER_PROCESS_COUNT
              value: '1'
            - name: REDIS_SERVICE_NAME
              value: {{ .Release.Name }}-redis
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-redis
                  key: redis-password
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: web
              containerPort: 3000
              protocol: TCP
            - name: smtp
              containerPort: 2525
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 60
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- range .Values.configMapVolumeMounts }}
            - name: config-volume
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
            {{- end }}
            - name: local-logs
              mountPath: /home/node/app/logs/
        {{- if .Values.fluentbit.enabled }}
        - name: {{ .Chart.Name }}-fluent-bit
          image: {{ .Values.fluentbit.imageRegistry }}
          imagePullPolicy: {{ .Values.fluentbit.imagePullPolicy }}
          ports:
            - name: logs
              containerPort: 2020
              protocol: TCP
          {{- if .Values.fluentbit.securityContext.enabled }}
          securityContext: {{- omit .Values.fluentbit.securityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.fluentbit.resources }}
          resources: {{- toYaml .Values.fluentbit.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: log-storage
              mountPath: /tmp/pvc/
            - name: local-logs
              mountPath: /tmp/logs/
              readOnly: true
        {{- end }}
      volumes:
        - configMap:
            name: {{include "NotifyBC.fullname" .}}
          name: config-volume
        - name: local-logs
          emptyDir: {}
        {{- if .Values.fluentbit.enabled }}
        - name: log-storage
          persistentVolumeClaim:
            claimName: {{ include "NotifyBC.fullname" . }}-logs
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
