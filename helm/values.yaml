# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/bcgov/notify-bc
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  web:
    type: ClusterIP
    port: 80
  smtp:
    enabled: true
    type: LoadBalancer
    port: 25

ingress:
  enabled: true
  annotations:
    []
    # kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/use-regex: 'true'
    # cert-manager.io/cluster-issuer: letsencrypt
  hosts:
    []
    # - host: notify-bc.local
    #   paths:
    #     - path: /
  tls: []
  #  - secretName: notify-bc-tls
  #    hosts:
  #      - notify-bc.local
resources:
  limits:
    cpu: '1'
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

mongodb:
  architecture: replicaset
  auth:
    username: notify-bc
    database: notify-bc
    password: ''
  persistence:
    size: 1Gi

configMap:
  config.local.js: |-
    module.exports = {
    }
  middleware.local.js: |-
    module.exports = {
    };
  db.datasource.local.js: |-
    module.exports = require('./db.datasource.production.js');

configMapVolumeMounts:
  - mountPath: /home/node/app/dist/config.production.js
    subPath: config.production.js
  - mountPath: /home/node/app/dist/middleware.production.js
    subPath: middleware.production.js
  - mountPath: /home/node/app/dist/datasources/db.datasource.production.js
    subPath: db.datasource.production.js
  - mountPath: /home/node/app/dist/config.local.js
    subPath: config.local.js
  - mountPath: /home/node/app/dist/middleware.local.js
    subPath: middleware.local.js
  - mountPath: /home/node/app/dist/datasources/db.datasource.local.js
    subPath: db.datasource.local.js

route:
  web:
    host: ''
    tls:
      termination: edge
  smtp:
    host: ''

cronJob:
  enabled: false
  schedule: '1 0 * * *'
  retentionDays: 7
  # timeZone: America/Vancouver
  timeZone: UTC
  persistence:
    size: 5Gi

redis:
  enabled: true
  sentinel:
    enabled: true
  master:
    persistence:
      enabled: false
  replica:
    persistence:
      enabled: false
