(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{484:function(t,e,a){"use strict";a.r(e);var s=a(58),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("p",[a("em",[t._v("NotifyBC")]),t._v(" can be installed in 3 ways:")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"#deploy-locally-from-source-code"}},[t._v("Deploy locally from Source Code")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#deploy-to-kubernetes"}},[t._v("Deploy to Kubernetes")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#deploy-docker-container"}},[t._v("Deploy Docker Container")])])]),t._v(" "),a("p",[t._v("For the purpose of evaluation, both source code and docker container will do. For production, the recommendation is one of")]),t._v(" "),a("ul",[a("li",[t._v("deploying to Kubernetes")]),t._v(" "),a("li",[t._v("setting up a load balanced app cluster from source code build, backed by MongoDB.")])]),t._v(" "),a("p",[t._v("To setup a development environment in order to contribute to "),a("em",[t._v("NotifyBC")]),t._v(",\ninstalling from source code is preferred.")]),t._v(" "),a("h2",{attrs:{id:"deploy-locally-from-source-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-locally-from-source-code"}},[t._v("#")]),t._v(" Deploy locally from Source Code")]),t._v(" "),a("h3",{attrs:{id:"system-requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#system-requirements"}},[t._v("#")]),t._v(" System Requirements")]),t._v(" "),a("ul",[a("li",[t._v("Software\n"),a("ul",[a("li",[t._v("Git")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js"),a("OutboundLink")],1),t._v("@>=14.5.0")]),t._v(" "),a("li",[t._v("openssl (if enable HTTPS)")])])]),t._v(" "),a("li",[t._v("Services\n"),a("ul",[a("li",[t._v("MongoDB, optional but recommended for production")]),t._v(" "),a("li",[t._v("A standard SMTP server to deliver outgoing email, optional but recommended for production.")]),t._v(" "),a("li",[t._v("A tcp proxy server such as "),a("a",{attrs:{href:"http://nginx.org/en/docs/stream/ngx_stream_proxy_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx stream proxy"),a("OutboundLink")],1),t._v(" if list-unsubscribe by email is needed and "),a("em",[t._v("NotifyBC")]),t._v(" server cannot expose port 25 to internet")]),t._v(" "),a("li",[t._v("A SMS service provider account if needs to enable SMS channel. The supported service providers are\n"),a("ul",[a("li",[t._v("Twilio (default)")]),t._v(" "),a("li",[t._v("Swift")])])]),t._v(" "),a("li",[t._v("Redis, optional but recommended if SMS is enabled")]),t._v(" "),a("li",[t._v("SiteMinder, if need to allow SiteMinder authenticated user request")]),t._v(" "),a("li",[t._v("OIDC provide, if need to allow OIDC authenticated user request")])])]),t._v(" "),a("li",[t._v("Network and Permissions\n"),a("ul",[a("li",[t._v("Minimum runtime firewall requirements:\n"),a("ul",[a("li",[t._v("outbound to your ISP DNS server")]),t._v(" "),a("li",[t._v("outbound to any on port 80 and 443 in order to run build scripts and send SMS messages")]),t._v(" "),a("li",[t._v("outbound to any on SMTP port 25 if using direct mail; for SMTP relay, outbound to your configured SMTP server and port only")]),t._v(" "),a("li",[t._v("inbound to listening port (3000 by default) from other authorized server ips")]),t._v(" "),a("li",[t._v("if "),a("em",[t._v("NotifyBC")]),t._v(" instance will handle anonymous subscription from client browser, the listening port should be open to internet either directly or indirectly through a reverse proxy; If "),a("em",[t._v("NotifyBC")]),t._v(" instance will only handle SiteMinder authenticated webapp requests, the listening port should NOT be open to internet. Instead, it should only open to SiteMinder web agent reverse proxy.")])])]),t._v(" "),a("li",[t._v("If list-unsubscribe by email is needed, then one of the following must be met\n"),a("ul",[a("li",[a("em",[t._v("NotifyBC")]),t._v(" can bind to port 25 opening to internet")]),t._v(" "),a("li",[t._v("a tcp proxy server of which port 25 is open to internet. This proxy server can reach "),a("em",[t._v("NotifyBC")]),t._v(" on a tcp port.")])])])])])]),t._v(" "),a("h3",{attrs:{id:"installation-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation-2"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("p",[t._v("Run following commands")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/bcgov/NotifyBC.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" NotifyBC\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -g "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" build\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" start\n")])])]),a("p",[t._v("If successful, you will see following output")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("...\nServer is running at http://0.0.0.0:3000\n")])])]),a("p",[t._v("Now open "),a("a",{attrs:{href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:3000"),a("OutboundLink")],1),t._v(". The page displays NotifyBC Web Console.")]),t._v(" "),a("p",[t._v("The above commands installs the "),a("em",[t._v("main")]),t._v(" version, i.e. main branch tip of "),a("em",[t._v("NotifyBC")]),t._v(" GitHub repository. To install a specific version, say "),a("em",[t._v("v2.1.0")]),t._v(", run")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout tags/v2.1.0 -b v2.1.0\n")])])]),a("p",[t._v("after "),a("code",[t._v("cd NotifyBC")]),t._v(". A list of versions can be found "),a("a",{attrs:{href:"https://github.com/bcgov/NotifyBC/tags",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("install from behind firewall")]),t._v(" "),a("p",[t._v("If you want to install on a server behind firewall which restricts internet connection, you can work around the firewall as long as you have access to a http(s) forward proxy server. Assuming the proxy server is http://my_proxy:8080 which proxies both http and https requests, to use it:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("For Linux")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("http_proxy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://my_proxy:8080\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("https_proxy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://my_proxy:8080\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global url."),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://"')]),t._v(".insteadOf git://\n")])])])]),t._v(" "),a("li",[a("p",[t._v("For Windows")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.proxy http://my_proxy:8080\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global url."),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://"')]),t._v(".insteadOf git://\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" proxy http://my_proxy:8080\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -g "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" proxy http://my_proxy:8080\n")])])])])])]),t._v(" "),a("h4",{attrs:{id:"install-windows-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-windows-service"}},[t._v("#")]),t._v(" Install Windows Service")]),t._v(" "),a("p",[t._v("After get the app running interactively, if your server is Windows and you want to install the app as a Windows service, run")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm install -g node-windows\nnpm link node-windows\nnode windows-service.js\n")])])]),a("p",[t._v("This will create and start service "),a("em",[t._v("notifyBC")]),t._v(". To change service name, modify file "),a("em",[t._v("windows-service.js")]),t._v(" before running it. See "),a("a",{attrs:{href:"https://github.com/coreybutler/node-windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("node-windows"),a("OutboundLink")],1),t._v(" for other operations such as uninstalling the service.")]),t._v(" "),a("h2",{attrs:{id:"deploy-to-kubernetes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-to-kubernetes"}},[t._v("#")]),t._v(" Deploy to Kubernetes")]),t._v(" "),a("p",[a("em",[t._v("NotifyBC")]),t._v(" provides a "),a("a",{attrs:{href:"https://github.com/orgs/bcgov/packages/container/package/notify-bc",target:"_blank",rel:"noopener noreferrer"}},[t._v("container package"),a("OutboundLink")],1),t._v(" in GitHub Container Registry and a "),a("a",{attrs:{href:"https://helm.sh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Helm"),a("OutboundLink")],1),t._v(" chart to facilitate Deploying to Kubernetes. Azure AKS and OpenShift are the two tested platforms. Other Kubernetes platforms are likely to work subject to customizations. Before deploying to AKS, "),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/aks/ingress-basic#create-an-ingress-controller",target:"_blank",rel:"noopener noreferrer"}},[t._v("create an ingress controller\n"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("The deployment can be initiated from localhost or automated by CI service such as Jenkins. Regardless, at the initiator's side following software needs to be installed:")]),t._v(" "),a("ul",[a("li",[t._v("git")]),t._v(" "),a("li",[t._v("Platform-specific CLI such as "),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/cli/azure/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Azure CLI"),a("OutboundLink")],1),t._v(" or "),a("a",{attrs:{href:"https://docs.openshift.org/latest/cli_reference/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenShift CLI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://helm.sh/docs/intro/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Helm CLI"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("To install,")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Follow your platform's instruction to login to the platform. For AKS, run "),a("code",[t._v("az login")]),t._v(" and "),a("code",[t._v("az aks get-credentials")]),t._v("; for OpenShift, run "),a("code",[t._v("oc login")])])]),t._v(" "),a("li",[a("p",[t._v("Run")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/bcgov/NotifyBC.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" NotifyBC\nhelm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -gf helm/platform-specific/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("platform"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".yaml helm\n")])])]),a("p",[t._v("replace <platform> with "),a("em",[t._v("openshift")]),t._v(" or "),a("em",[t._v("aks")]),t._v(" depending on your platform.")]),t._v(" "),a("p",[t._v("The above commands create following artifacts:")]),t._v(" "),a("ul",[a("li",[t._v("A MongoDB cluster with 2 nodes and 1 arbiter, each implemented as a stateful set")]),t._v(" "),a("li",[t._v("Two deployments - "),a("em",[t._v("notify-bc-app")]),t._v(" and "),a("em",[t._v("notify-bc-cron")])]),t._v(" "),a("li",[t._v("One HPA - "),a("em",[t._v("notify-bc-cron")])]),t._v(" "),a("li",[t._v("Four services - "),a("em",[t._v("notify-bc")]),t._v(", "),a("em",[t._v("notify-bc-smtp")]),t._v(", "),a("em",[t._v("mongodb-headless")]),t._v(" and "),a("em",[t._v("mongodb-arbiter-headless")])]),t._v(" "),a("li",[t._v("Two PVCs each for one MongoDB node")]),t._v(" "),a("li",[t._v("Two config maps - "),a("em",[t._v("notify-bc")]),t._v(" and "),a("em",[t._v("mongodb-scripts")])]),t._v(" "),a("li",[t._v("Two service accounts - "),a("em",[t._v("notify-bc")]),t._v(" and "),a("em",[t._v("mongodb")])]),t._v(" "),a("li",[t._v("One more more secrets, with the most important one being "),a("em",[t._v("mongodb")]),t._v(", containing MongoDB connection credentials")]),t._v(" "),a("li",[t._v("On AKS,\n"),a("ul",[a("li",[t._v("a "),a("em",[t._v("notify-bc")]),t._v(" ingress")])])]),t._v(" "),a("li",[t._v("On OpenShift,\n"),a("ul",[a("li",[t._v("2 routes - "),a("em",[t._v("notify-bc-web")]),t._v(" and "),a("em",[t._v("notify-bc-smtp")])])])])])])]),t._v(" "),a("p",[t._v("To upgrade,")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("helm upgrade "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("release-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -f helm/platform-specific/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("platform"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".yaml --set mongodb.auth.rootPassword"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mongodb-root-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --set mongodb.auth.replicaSetKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mongodb-replica-set-key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --set mongodb.auth.password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mongodb-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" helm\n")])])]),a("p",[t._v("replace <release-name> with installed helm release name and <platform> with "),a("em",[t._v("openshift")]),t._v(" or "),a("em",[t._v("aks")]),t._v(" depending on your platform. MongoDB credentials <mongodb-root-password>, <mongodb-replica-set-key> and <mongodb-password> can be found in secret "),a("em",[t._v("<release-name>-mongodb")]),t._v(". It is recommended to specify mongodb credentials in a file rather than command line. See "),a("a",{attrs:{href:"#customizations"}},[t._v("Customizations")]),t._v(" below.")]),t._v(" "),a("p",[t._v("To uninstall,")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("helm uninstall "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("release-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("replace <release-name> with installed helm release name.")]),t._v(" "),a("h3",{attrs:{id:"customizations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#customizations"}},[t._v("#")]),t._v(" Customizations")]),t._v(" "),a("p",[t._v("Various customizations can be made to chart. Some are platform dependent. To customize, first create a file with extension "),a("em",[t._v(".local.yaml")]),t._v(". The rest of the document assumes the file is "),a("em",[t._v("helm/values.local.yaml")]),t._v(". Then add customized parameters to the file. See "),a("em",[t._v("helm/values.yaml")]),t._v(" and Bitnami MongoDB chart "),a("a",{attrs:{href:"https://github.com/bitnami/charts/tree/master/bitnami/mongodb",target:"_blank",rel:"noopener noreferrer"}},[t._v("readme"),a("OutboundLink")],1),t._v(" for customizable parameters. Parameters in "),a("em",[t._v("helm/values.local.yaml")]),t._v(" overrides corresponding ones in "),a("em",[t._v("helm/values.yaml")]),t._v(". In particular, parameters under "),a("em",[t._v("mongodb")]),t._v(" of "),a("em",[t._v("helm/values.local.yaml")]),t._v(" overrides Bitnami MongoDB chart parameters.")]),t._v(" "),a("p",[t._v("To apply customizations, add "),a("code",[t._v("-f helm/values.local.yaml")]),t._v(" to the helm command after "),a("code",[t._v("-f helm/platform-specific/<platform>.yaml")]),t._v(". For example, to install chart with customization on OpenShift,")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("helm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -gf helm/platform-specific/openshift.yaml -f helm/values.local.yaml helm\n")])])]),a("p",[t._v("to upgrade an existing release with customization on OpenShift,")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("helm upgrade "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("release-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -f helm/platform-specific/openshift.yaml -f helm/values.local.yaml helm\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Backup "),a("i",[t._v("helm/values.local.yaml")])]),t._v(" "),a("p",[t._v("Backup "),a("em",[t._v("helm/values.local.yaml")]),t._v(" to a private secured SCM is highly recommended, especially for production environment.")])]),t._v(" "),a("p",[t._v("Following are some common customizations")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Update "),a("em",[t._v("config.local.js")]),t._v(" in ConfigMap, for example to define "),a("em",[t._v("httpHost")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config.local.js")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n    module.exports = "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://myNotifyBC.myOrg.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Set hostname on AKS,")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myNotifyBC.myOrg.com\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Use "),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/aks/ingress-tls",target:"_blank",rel:"noopener noreferrer"}},[t._v("Let's Encrypt on AKS"),a("OutboundLink")],1),t._v(". After following the instructions in the link, add following ingress customizations to file "),a("em",[t._v("helm/values.local.yaml")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cert-manager.io/cluster-issuer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" letsencrypt\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secretName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secret\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" notify"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("bc.local\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Route host names on Openshift are by default auto-generated. To set to fixed values")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myNotifyBC.myOrg.com'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("smtp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'smtp.myNotifyBC.myOrg.com'")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Add certificates to OpenShift web route")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("caCertificate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("BEGIN CERTIFICATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("END CERTIFICATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("certificate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("BEGIN CERTIFICATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("END CERTIFICATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("insecureEdgeTerminationPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Redirect\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("BEGIN PRIVATE KEY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("END PRIVATE KEY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("MongoDb")]),t._v(" "),a("p",[a("em",[t._v("NotifyBC")]),t._v(" chart depends on "),a("a",{attrs:{href:"https://github.com/bitnami/charts/tree/master/bitnami/mongodb",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bitnami MongoDB chart"),a("OutboundLink")],1),t._v(" for MongoDB database provisioning. All documented parameters are customizable under "),a("em",[t._v("mongodb")]),t._v(". For example, to change "),a("em",[t._v("architecture")]),t._v(" to "),a("em",[t._v("standalone")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongodb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("architecture")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" standalone\n")])])]),a("p",[t._v("To set credentials,")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongodb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("auth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rootPassword")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("replicaSetKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("To install a Helm chart, the above credentials can be randomly defined. To upgrade an existing release, they must match what's defined in secret "),a("em",[t._v("<release-name>-mongodb")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("Redis")]),t._v(" "),a("p",[a("em",[t._v("NotifyBC")]),t._v(" chart depends on "),a("a",{attrs:{href:"https://github.com/bitnami/charts/tree/master/bitnami/redis",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bitnami Redis chart"),a("OutboundLink")],1),t._v(" for Redis provisioning. All documented parameters are customizable under "),a("em",[t._v("redis")]),t._v(". For example, to set credential")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("auth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("To install a Helm chart, the above credential can be randomly defined. To upgrade an existing release, It must match what's defined in secret "),a("em",[t._v("<release-name>-redis")]),t._v(".")])]),t._v(" "),a("li",[a("p",[t._v("Both Bitnami MongoDB and Redis use Docker Hub for docker registry. Rate limit imposed by Docker Hub can cause runtime problems. If your organization has JFrog artifactory, you can change the registry")])])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("global")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imageRegistry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <artifactory.myOrg.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("imagePullSecrets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" <docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("The above settings assume you have setup secret <docker-pull-secret> to access <artifactory.myOrg.com>. The secret can be created using "),a("a",{attrs:{href:"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-secret-by-providing-credentials-on-the-command-line",target:"_blank",rel:"noopener noreferrer"}},[t._v("kubectl"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Enable scheduled MongoDB backup CronJob")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cronJob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1 0 * * *'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retentionDays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeZone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" UTC\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistence")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5Gi\n")])])]),a("p",[t._v("where")]),t._v(" "),a("ul",[a("li",[t._v("enabled: whether to enable the MongoDB backup CronJob or not; default to "),a("code",[t._v("false")])]),t._v(" "),a("li",[t._v("schedule: the Unix crontab schedule; default to "),a("code",[t._v("'1 0 * * *'")]),t._v(" which runs daily at 12:01AM")]),t._v(" "),a("li",[t._v("retentionDays: how many days the backup is retained; default to "),a("code",[t._v("7")])]),t._v(" "),a("li",[t._v("timeZone: the Unix TZ environment variable; default to "),a("code",[t._v("UTC")])]),t._v(" "),a("li",[t._v("persistence size: size of PVC; default to "),a("code",[t._v("5Gi")])])]),t._v(" "),a("p",[t._v("The CronJob backs up MongoDB to a PVC named after the chart with suffix "),a("em",[t._v("-cronjob-mongodb-backup")]),t._v(" and purges backups that are older than "),a("em",[t._v("retentionDays")]),t._v(".")]),t._v(" "),a("p",[t._v("To facilitate restoration, mount the PVC to MongoDB pod")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongodb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extraVolumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" export\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistentVolumeClaim")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("claimName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <PVC_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extraVolumeMounts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" export\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mountPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /export\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("readOnly")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),a("p",[t._v("Restoration can then be achieved by running in MongoDB pod")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("mongorestore -u "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$MONGODB_USERNAME")]),t._v('"')]),t._v(" -p"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$MONGODB_PASSWORD")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--uri"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mongodb://'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$K8S_SERVICE_NAME")]),t._v('"')]),t._v(" --db "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$MONGODB_DATABASE")]),t._v(" --gzip --drop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--archive"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/export/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mongodb-backup-YYMMDD-hhmmss.gz"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("em",[t._v("NotifyBC")]),t._v(" image tag defaults to latest published version. To change to "),a("em",[t._v("latest")]),t._v(", i.e. tip of the "),a("em",[t._v("main branch")]),t._v(",")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" latest\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Enable autoscaling for app pod")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("autoscaling")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"deploy-docker-container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-docker-container"}},[t._v("#")]),t._v(" Deploy Docker Container")]),t._v(" "),a("p",[t._v("If you have git and Docker installed, you can run following command to deploy "),a("em",[t._v("NotifyBC")]),t._v(" Docker container:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run --rm -dp "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v(":3000 ghcr.io/bcgov/notify-bc\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# open http://localhost:3000")]),t._v("\n")])])]),a("p",[t._v("If successful, similar output is displayed as in source code installation.")])])}),[],!1,null,null,null);e.default=n.exports}}]);