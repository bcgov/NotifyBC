(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{477:function(e,t,i){"use strict";i.r(t);var s=i(58),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"configuration-overview"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#configuration-overview"}},[e._v("#")]),e._v(" Configuration Overview")]),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("Helm Chart Configurations")]),e._v(" "),i("p",[e._v("The document pages in this section cover "),i("em",[e._v("NoitfyBC")]),e._v(" app level configurations only.\nIf your "),i("em",[e._v("NotifyBC")]),e._v(" is deployed to Kubernetes using Helm, you can also "),i("RouterLink",{attrs:{to:"/docs/getting-started/installation.html#customizations"}},[e._v("customize")]),e._v(" infrastructure level configurations.")],1)]),e._v(" "),i("p",[e._v("There are two types of configurations - static and dynamic. Static configurations are defined in files or environment variables, requiring restarting "),i("em",[e._v("NotifyBC")]),e._v(" to take effect, whereas dynamic configurations are defined in databases and updates take effect immediately.")]),e._v(" "),i("h2",{attrs:{id:"static-configurations"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#static-configurations"}},[e._v("#")]),e._v(" Static Configurations")]),e._v(" "),i("p",[e._v("Most static configurations are specified in file "),i("em",[e._v("/src/config.ts")]),e._v(". If you need to change, instead of updating "),i("em",[e._v("/src/config.ts")]),e._v(" file, create local file "),i("em",[e._v("/src/config.local.js")]),e._v(" or environment specific file "),i("em",[e._v("/src/config.<env>.js")]),e._v(", which is only included when environment variable "),i("em",[e._v("NODE_ENV")]),e._v(" equals "),i("em",[e._v("<env>")]),e._v(". Besides "),i("em",[e._v("js")]),e._v(", "),i("em",[e._v("ts")]),e._v(" and "),i("em",[e._v("json")]),e._v(" file extensions are also supported. The rest of the documentation assumes the file extension is "),i("em",[e._v("js")]),e._v(". Content in these files are deeply merged in following ascending precedence")]),e._v(" "),i("ul",[i("li",[e._v("default file /src/config.ts")]),e._v(" "),i("li",[e._v("environment specific file "),i("em",[e._v("/src/config.<env>.js")])]),e._v(" "),i("li",[e._v("local file "),i("em",[e._v("/src/config.local.js")])])]),e._v(" "),i("div",{staticClass:"custom-block warning"},[i("p",{staticClass:"custom-block-title"},[e._v("Run build script whenever changing file in /src")]),e._v(" "),i("p",[e._v("Every time a file under "),i("em",[e._v("/src")]),e._v(", including config files, is updated, run "),i("code",[e._v("yarn build")]),e._v(" before restarting "),i("em",[e._v("NotifyBC")]),e._v(" to take effect.")])]),e._v(" "),i("p",[e._v("Following configs should be customized per installation")]),e._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/config/adminIpList.html"}},[e._v("Admin IP List")])],1),e._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/config/reverseProxyIpLists.html"}},[e._v("Reverse Proxy IP Lists")])],1),e._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/config/httpHost.html"}},[e._v("HTTP Host")])],1),e._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/config/email.html#smtp"}},[e._v("SMTP")])],1)]),e._v(" "),i("p",[e._v("In addition, if installing from source code")]),e._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/config/database.html"}},[e._v("Database")])],1),e._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/config/internalHttpHost.html"}},[e._v("Internal HTTP Host")])],1)]),e._v(" "),i("p",[e._v("Customizing other configs only if needed.")]),e._v(" "),i("h2",{attrs:{id:"dynamic-configurations"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-configurations"}},[e._v("#")]),e._v(" Dynamic Configurations")]),e._v(" "),i("p",[e._v("Dynamic configs are managed using REST "),i("RouterLink",{attrs:{to:"/docs/api-config/"}},[e._v("configuration api")]),e._v(".")],1),e._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[e._v("Why Dynamic Configs?")]),e._v(" "),i("p",[e._v("Dynamic configs are needed in cases such as")]),e._v(" "),i("ul",[i("li",[e._v("to allow define service-specific configs such as message templates")]),e._v(" "),i("li",[e._v("in a multi-node deployment, configs can be generated by one node (typically master) and shared with other nodes")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);