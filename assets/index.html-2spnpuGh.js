import{_ as s,c as a,e,o as p}from"./app-BiOVGXUL.js";const t={};function o(l,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="queue" tabindex="-1"><a class="header-anchor" href="#queue"><span>Queue</span></a></h1><p><em>NotifyBC</em> uses <a href="https://docs.bullmq.io/" target="_blank" rel="noopener noreferrer">BullMQ</a> for notification processing, email and sms throttling. BullMQ is built on top of Redis. Redis connection is defined in config <em>queue.connection</em> with following defaults</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line">  <span class="token literal-property property">queue</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">connection</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">6379</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To override the defaults, set the config in <em>src/config.local.js</em>. More connection parameters are documented in <a href="https://github.com/redis/ioredis" target="_blank" rel="noopener noreferrer">ioredis</a>. For example, to use Sentinel,</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line">  <span class="token literal-property property">queue</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">connection</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">sentinels</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">host</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REDIS_SERVICE_NAME</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;mymaster&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">password</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REDIS_PASSWORD</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">sentinelPassword</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REDIS_PASSWORD</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you deployed <em>NotifyBC</em> using Helm chart, this config is taken care of. If you deployed <em>NotifyBC</em> using docker, Redis is created inside docker using <a href="https://github.com/mhassan1/redis-memory-server" target="_blank" rel="noopener noreferrer">Redis In-Memory Server </a> by default.</p>`,6)]))}const c=s(t,[["render",o],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/docs/config-queue/","title":"Queue","lang":"en-US","frontmatter":{"permalink":"/docs/config-queue/"},"headers":[],"git":{},"filePathRelative":"docs/config/queue.md"}');export{c as comp,r as data};
