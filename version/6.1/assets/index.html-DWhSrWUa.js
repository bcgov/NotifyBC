import{_ as p,c,a as s,f as a,b as i,d as t,e as o,r as l,o as r}from"./app-COAtNE67.js";const d={};function u(m,n){const e=l("RouteLink");return r(),c("div",null,[n[5]||(n[5]=s("h1",{id:"cron-jobs",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#cron-jobs"},[s("span",null,"Cron Jobs")])],-1)),n[6]||(n[6]=s("p",null,[s("em",null,"NotifyBC"),a(" runs several cron jobs described below. These jobs are controlled by sub-properties defined in config object "),s("em",null,"cron"),a(". To change config, create the object and properties in file "),s("em",null,"src/config.local.js"),a(".")],-1)),s("p",null,[n[1]||(n[1]=a("By default cron jobs are enabled. In a multi-node deployment, cron jobs should only run on the ")),i(e,{to:"/docs/config-nodeRoles/"},{default:t(()=>n[0]||(n[0]=[a("primary node")])),_:1}),n[2]||(n[2]=a(" to ensure single execution."))]),n[7]||(n[7]=o(`<p>All cron jobs have a property named <a name="timeSpec"></a><em>timeSpec</em> with the value of a space separated fields conforming to <a href="https://www.freebsd.org/cgi/man.cgi?crontab(5)" target="_blank" rel="noopener noreferrer">unix crontab format</a> with an optional left-most seconds field. See <a href="https://github.com/kelektiv/node-cron#cron-ranges" target="_blank" rel="noopener noreferrer">allowed ranges</a> of each field.</p><h2 id="purge-data" tabindex="-1"><a class="header-anchor" href="#purge-data"><span>Purge Data</span></a></h2><p>This cron job purges old notifications, subscriptions and notification bounces. The default frequency of cron job and retention policy are defined by <em>cron.purgeData</em> config object in file <em>src/config.ts</em></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  cron<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    purgeData<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// daily at 1am</span></span>
<span class="line">      timeSpec<span class="token operator">:</span> <span class="token string">&#39;0 0 1 * * *&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      pushNotificationRetentionDays<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">      expiredInAppNotificationRetentionDays<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">      nonConfirmedSubscriptionRetentionDays<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">      deletedBounceRetentionDays<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">      expiredAccessTokenRetentionDays<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">      defaultRetentionDays<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>where</p><ul><li><em>pushNotificationRetentionDays</em>: the retention days of push notifications</li><li><em>expiredInAppNotificationRetentionDays</em>: the retention days of expired inApp notifications</li><li><em>nonConfirmedSubscriptionRetentionDays</em>: the retention days of non-confirmed subscriptions, i.e. all unconfirmed and deleted subscriptions</li><li><em>deletedBounceRetentionDays</em>: the retention days of deleted notification bounces</li><li>expiredAccessTokenRetentionDays: the retention days of expired access tokens</li><li><em>defaultRetentionDays</em>: if any of the above retention day config item is omitted, default retention days is used as fall back.</li></ul><p>To change a config item, set the config item in file <em>src/config.local.js</em>. For example, to run cron jobs at 2am daily, add following object to <em>src/config.local.js</em></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">cron</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">purgeData</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">timeSpec</span><span class="token operator">:</span> <span class="token string">&#39;0 0 2 * * *&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dispatch-live-notifications" tabindex="-1"><a class="header-anchor" href="#dispatch-live-notifications"><span>Dispatch Live Notifications</span></a></h2><p>This cron job sends out future-dated notifications when the notification becomes current. The default config is defined by <em>cron.dispatchLiveNotifications</em> config object in file <em>src/config.ts</em></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  cron<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    dispatchLiveNotifications<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// minutely</span></span>
<span class="line">      timeSpec<span class="token operator">:</span> <span class="token string">&#39;0 * * * * *&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="check-rss-config-updates" tabindex="-1"><a class="header-anchor" href="#check-rss-config-updates"><span>Check Rss Config Updates</span></a></h2><p>This cron job monitors RSS feed notification dynamic config items. If a config item is created, updated or deleted, the cron job starts, restarts, or stops the RSS-specific cron job. The default config is defined by <em>cron.checkRssConfigUpdates</em> config object in file <em>src/config.ts</em></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  cron<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    checkRssConfigUpdates<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// minutely</span></span>
<span class="line">      timeSpec<span class="token operator">:</span> <span class="token string">&#39;0 * * * * *&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note <em>timeSpec</em> doesn&#39;t control the RSS poll frequency (which is defined in dynamic configs and is service specific), instead it only controls the frequency to check for dynamic config changes.</p><h2 id="delete-notification-bounces" tabindex="-1"><a class="header-anchor" href="#delete-notification-bounces"><span>Delete Notification Bounces</span></a></h2><p>This cron job deletes notification bounces if the latest notification is deemed delivered successfully. The criteria of successful delivery are</p><ol><li>No bounce received since the latest notification started dispatching, and</li><li>a configured time span has lapsed since the latest notification finished dispatching</li></ol><p>The default config is defined by <em>cron.deleteBounces</em> config object in file <em>src/config.ts</em></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  cron<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    deleteBounces<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// hourly</span></span>
<span class="line">      timeSpec<span class="token operator">:</span> <span class="token string">&#39;0 0 * * * *&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      minLapsedHoursSinceLatestNotificationEnded<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>where</p><ul><li><em>minLapsedHoursSinceLatestNotificationEnded</em> is the time span</li></ul><h2 id="re-dispatch-broadcast-push-notifications" tabindex="-1"><a class="header-anchor" href="#re-dispatch-broadcast-push-notifications"><span>Re-dispatch Broadcast Push Notifications</span></a></h2>`,23)),s("p",null,[n[4]||(n[4]=a("This cron job re-dispatches a broadcast push notifications when redis cluster fails. It is part of ")),i(e,{to:"/docs/config/notification.html#guaranteed-broadcast-push-dispatch-processing"},{default:t(()=>n[3]||(n[3]=[a("guaranteed broadcast push dispatch processing")])),_:1})]),n[8]||(n[8]=o(`<p>The default config is defined by <em>cron.reDispatchBroadcastPushNotifications</em> config object in file <em>src/config.ts</em></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  cron<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    reDispatchBroadcastPushNotifications<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// minutely</span></span>
<span class="line">      timeSpec<span class="token operator">:</span> <span class="token string">&#39;0 * * * * *&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))])}const v=p(d,[["render",u],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/docs/config-cronJobs/","title":"Cron Jobs","lang":"en-US","frontmatter":{"permalink":"/docs/config-cronJobs/"},"headers":[{"level":2,"title":"Purge Data","slug":"purge-data","link":"#purge-data","children":[]},{"level":2,"title":"Dispatch Live Notifications","slug":"dispatch-live-notifications","link":"#dispatch-live-notifications","children":[]},{"level":2,"title":"Check Rss Config Updates","slug":"check-rss-config-updates","link":"#check-rss-config-updates","children":[]},{"level":2,"title":"Delete Notification Bounces","slug":"delete-notification-bounces","link":"#delete-notification-bounces","children":[]},{"level":2,"title":"Re-dispatch Broadcast Push Notifications","slug":"re-dispatch-broadcast-push-notifications","link":"#re-dispatch-broadcast-push-notifications","children":[]}],"git":{},"filePathRelative":"docs/config/cronJobs.md"}');export{v as comp,b as data};
