(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{472:function(t,e,s){"use strict";s.r(e);var a=s(58),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"internal-http-host"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#internal-http-host"}},[t._v("#")]),t._v(" Internal HTTP Host")]),t._v(" "),s("p",[t._v("By default, HTTP requests submitted by "),s("em",[t._v("NotifyBC")]),t._v(" back to itself will be sent to "),s("em",[t._v("httpHost")]),t._v(" if defined or the host of the incoming HTTP request that spawns such internal requests. But if config "),s("em",[t._v("internalHttpHost")]),t._v(", which has no default value, is defined, for example in file "),s("em",[t._v("/src/config.local.js")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("internalHttpHost")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://notifybc:3000'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("then the HTTP request will be sent to the configured host. An internal request can be generated, for example, as a "),s("RouterLink",{attrs:{to:"/docs/config-notification/#broadcast-push-notification-task-concurrency"}},[t._v("sub-request of broadcast push notification")]),t._v(". "),s("em",[t._v("internalHttpHost")]),t._v(" shouldn't be accessible from internet.")],1),t._v(" "),s("p",[t._v("All internal requests are supposed to be admin requests. The purpose of "),s("em",[t._v("internalHttpHost")]),t._v(" is to facilitate identifying the internal server ip as admin ip.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Kubernetes Use Case")]),t._v(" "),s("p",[t._v("The Kubernetes deployment script sets "),s("i",[t._v("internalHttpHost")]),t._v(" to "),s("em",[t._v("notify-bc-app")]),t._v(" service url in config map. The source ip in such case would be in a private Kubernetes ip range. You should add this private ip range to "),s("a",{attrs:{href:"#admin-ip-list"}},[t._v("admin ip list")]),t._v(". The private ip range varies from Kubernetes installation. In BCGov's OCP4 cluster, it starts with octet 10.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);