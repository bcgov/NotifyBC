(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{491:function(t,s,e){"use strict";e.r(s);var a=e(58),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"benchmarks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#benchmarks"}},[t._v("#")]),t._v(" Benchmarks")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("tl;dr")]),t._v(" "),e("p",[t._v("A "),e("i",[t._v("NotifyBC")]),t._v(" server node can deliver 1 million emails in as little as 1 hour to a SMTP server node. SMTP server node's disk I/O is the bottleneck in such case. Throughput can be improved through horizontal scaling.")])]),t._v(" "),e("p",[t._v("When "),e("em",[t._v("NotifyBC")]),t._v(" is used to deliver broadcast push notifications to a large number of subscribers, probably the most important benchmark is throughput. The benchmark is especially critical if a latency cap is desired. To facilitate capacity planning, load testing on the email channel has been conducted. The test environment, procedure, results and performance tuning advices are provided hereafter.")]),t._v(" "),e("h2",{attrs:{id:"environment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#environment"}},[t._v("#")]),t._v(" Environment")]),t._v(" "),e("h3",{attrs:{id:"hardware"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hardware"}},[t._v("#")]),t._v(" Hardware")]),t._v(" "),e("p",[t._v("Two computers, connected by 1Gbps LAN, are used to host")]),t._v(" "),e("ul",[e("li",[e("em",[t._v("NotifyBC")]),t._v(" "),e("ul",[e("li",[t._v("Mac Mini Late 2012 model")]),t._v(" "),e("li",[t._v("Intel core i7-3615QM")]),t._v(" "),e("li",[t._v("16GB RAM")]),t._v(" "),e("li",[t._v("2TB HDD")])])]),t._v(" "),e("li",[t._v("SMTP and mail delivery\n"),e("ul",[e("li",[t._v("Lenovo ThinkCentre M Series 2015 model")]),t._v(" "),e("li",[t._v("Intel core i5-3470")]),t._v(" "),e("li",[t._v("8GB RAM")]),t._v(" "),e("li",[t._v("256GB SSD")])])])]),t._v(" "),e("h3",{attrs:{id:"software-stack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#software-stack"}},[t._v("#")]),t._v(" Software Stack")]),t._v(" "),e("p",[t._v("The test was performed in August 2017. Unless otherwise specified, the versions of all other software were reasonably up-to-date at the time of testing.")]),t._v(" "),e("ul",[e("li",[e("p",[e("em",[t._v("NotifyBC")])]),t._v(" "),e("ul",[e("li",[t._v("MacOS Sierra Version 10.12.6")]),t._v(" "),e("li",[t._v("Virtualbox VM with 8vCPU, 10GB RAM, created using miniShift v1.3.1+f4900b07")]),t._v(" "),e("li",[t._v("OpenShift 1.5.1+7b451fc with metrics")]),t._v(" "),e("li",[t._v("default "),e("em",[t._v("NotifyBC")]),t._v(" OpenShift installation, which contains following relevant pods\n"),e("ul",[e("li",[t._v("1 mongodb pod with 1 core, 1GiB RAM limit")]),t._v(" "),e("li",[t._v("a variable number of Node.js app pods each with 1 core, 1GiB RAM limit. The number varies by test runs as indicated in result.")])])])])]),t._v(" "),e("li",[e("p",[t._v("SMTP and mail delivery")]),t._v(" "),e("ul",[e("li",[t._v("Windows 7 host")]),t._v(" "),e("li",[t._v("Virtualbox VM with 4 vCPU, 3.5GB RAM, running Windows Server 2012")]),t._v(" "),e("li",[t._v("added SMTP Server feature")]),t._v(" "),e("li",[t._v("in SMTP Server properties dialog box, uncheck all of following boxes in "),e("em",[t._v("Messages")]),t._v(" tab\n"),e("ul",[e("li",[t._v("Limit message size to (KB)")]),t._v(" "),e("li",[t._v("Limit session size to (KB)")]),t._v(" "),e("li",[t._v("Limit number of messages per connection to")]),t._v(" "),e("li",[t._v("Limit number of recipients per message to")])])])])])]),t._v(" "),e("h2",{attrs:{id:"procedure"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#procedure"}},[t._v("#")]),t._v(" Procedure")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("update or create file "),e("em",[t._v("/src/config.local.js")]),t._v(" through "),e("RouterLink",{attrs:{to:"/docs/installation/#update-configuration-files"}},[t._v("configMap")]),t._v(". Add sections for SMTP server and a custom filter function")],1),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("smtp")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("host")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<smtp-vm-ip-or-hostname>'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("secure")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("port")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pool")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("direct")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("maxMessages")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("maxConnections")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("notification")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("broadcastCustomFilterFunctions")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*jshint camelcase: false */")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("contains_ci")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_func")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolvedArgs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("resolvedArgs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("resolvedArgs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            _"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLower")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolvedArgs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLower")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolvedArgs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("_signature")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("types")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("types")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("create a number of subscriptions in bulk using script "),e("a",{attrs:{href:"https://github.com/bcgov/NotifyBC/blob/main/src/utils/load-testing/bulk-post-subs.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("bulk-post-subs.js"),e("OutboundLink")],1),t._v(". To load test different email volumes, you can create bulk subscriptions in different services. For example, generate 10 subscriptions under service named "),e("em",[t._v("load10")]),t._v("; 1,000,000 subscriptions under service "),e("em",[t._v("load1000000")]),t._v(" etc. "),e("em",[t._v("bulk-post-subs.js")]),t._v(" takes "),e("em",[t._v("userChannelId")]),t._v(" and other optional parameters")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" dist/utils/load-testing/bulk-post-subs.js -h\nUsage: "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" bulk-post-subs.js "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("userChannelId"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":\n-a, --api-url-prefix"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                      api url prefix. default to http://localhost:3000/api\n-c, --channel"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                             channel. default to email\n-s, --service-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" name. default to load\n-n, --number-of-subscribers"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("int"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                  number of subscribers. positive integer. default to "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n-f, --broadcast-push-notification-filter"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  broadcast push notification filter. default to "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"contains_ci(title,'vancouver') || contains_ci(title,'victoria')\"")]),t._v("\n-h, --help                                         display this "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("\n")])])]),e("p",[t._v("The generated subscriptions contain a filter, hence all load testing results below included time spent on filtering.")])]),t._v(" "),e("li",[e("p",[t._v("launch load testing using script "),e("a",{attrs:{href:"https://github.com/bcgov/NotifyBC/blob/main/src/utils/load-testing/curl-ntf.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("curl-ntf.sh"),e("OutboundLink")],1),t._v(", which takes following optional parameters")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("dist/utils/load-testing/curl-ntf.sh <apiUrlPrefix> <serviceName> <senderEmail>\n")])])]),e("p",[t._v("The script will print start time and the time taken to dispatch the notification.")])])]),t._v(" "),e("h2",{attrs:{id:"results"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#results"}},[t._v("#")]),t._v(" Results")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"right"}},[t._v("email count")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("time taken (min)")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("throughput (#/min)")]),t._v(" "),e("th",{staticStyle:{"text-align":"right"}},[t._v("app pod count")]),t._v(" "),e("th",[t._v("notes on bottleneck")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"right"}},[t._v("1,000,000")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("71.5")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("13,986")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("1")]),t._v(" "),e("td",[t._v("app pod cpu capped")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"right"}},[t._v("100,000")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("5.8")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("17,241")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("2")]),t._v(" "),e("td",[t._v("smtp vm disk queue length hits 1 frequently")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"right"}},[t._v("1,000,000")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("57")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("17,544")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("2")]),t._v(" "),e("td",[t._v("smtp vm disk queue length hits 1 frequently")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"right"}},[t._v("1,000,000")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("57.8")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("17,301")]),t._v(" "),e("td",{staticStyle:{"text-align":"right"}},[t._v("3")]),t._v(" "),e("td",[t._v("smtp vm disk queue length hits 1 frequently")])])])]),t._v(" "),e("p",[t._v("Test runs using other software or configurations described below have also been conducted. Because throughput is significantly lower, results are not shown")]),t._v(" "),e("ul",[e("li",[t._v("using Linux sendmail SMTP. The throughput of a 4-vCPU Linux VM is about the same as a 1-vCPU Windows SMTP server. Bottleneck in such case is the CPU of SMTP server.")]),t._v(" "),e("li",[t._v("Reducing "),e("em",[t._v("NotifyBC")]),t._v(" app pod's resource limit to 100 millicore CPU and 512MiB RAM. Even when scaled up pod count to 15, throughput is still about 1/3 of a 1-core pod.")])]),t._v(" "),e("p",[e("a",{attrs:{href:"../../attachments/benchmark-email.txt"}},[t._v("Here")]),t._v(" is a sample email saved onto the mail drop folder of SMTP server.")]),t._v(" "),e("h3",{attrs:{id:"comparison-to-other-benchmarks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#comparison-to-other-benchmarks"}},[t._v("#")]),t._v(" Comparison to Other Benchmarks")]),t._v(" "),e("p",[t._v("According to "),e("a",{attrs:{href:"https://technet.microsoft.com/en-us/library/bb124213(v=exchg.65).aspx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Baseline Performance for SMTP"),e("OutboundLink")],1),t._v(" published on Microsoft Technet in 2005, Windows SMTP server has a max throughput of 142 emails/s. However this "),e("em",[t._v("NotifyBC")]),t._v(" load test yields a max throughput of 292 emails/s. The discrepancy may be attributed to following factors")]),t._v(" "),e("ol",[e("li",[t._v("Email size in Microsoft's load test is 50k, as opposed to 1k used in this test")]),t._v(" "),e("li",[t._v("SSD storage is used in this test. It is unlikely the test conducted in 2005 used SSD.")])]),t._v(" "),e("h2",{attrs:{id:"advices"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#advices"}},[t._v("#")]),t._v(" Advices")]),t._v(" "),e("ul",[e("li",[t._v("Avoid using default direct mode in production. Instead use SMTP server. Direct mode doesn't support connection pooling, resulting in port depletion quickly.")]),t._v(" "),e("li",[t._v("Enable SMTP "),e("a",{attrs:{href:"https://nodemailer.com/smtp/pooled/",target:"_blank",rel:"noopener noreferrer"}},[t._v("pooling"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("li",[t._v("Set smtp config "),e("em",[t._v("maxConnections")]),t._v(" to a number big enough as long as SMTP server can handle. Test found for Windows SMTP server 50 is a suitable number, beyond which performance gain is insignificant.")]),t._v(" "),e("li",[t._v("Set smtp config "),e("em",[t._v("maxMessages")]),t._v(" to maximum possible number allowed by your SMTP server, or "),e("em",[t._v("Infinity")]),t._v(" if SMTP server imposes no such constraint")]),t._v(" "),e("li",[t._v("Avoid setting CPU resource limit too low for "),e("em",[t._v("NotifyBC")]),t._v(" app pods.")]),t._v(" "),e("li",[t._v("If you have control over the SMTP server,\n"),e("ul",[e("li",[t._v("use SSD for its storage")]),t._v(" "),e("li",[t._v("create a load balanced cluster if possible, since SMTP server is more likely to be the bottleneck.")])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);